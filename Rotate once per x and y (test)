// Define the MS1, MS2, MS3 pins
const int MS1 = 7;  // Example: connected to Arduino pin 7
const int MS2 = 8;  // Example: connected to Arduino pin 8
const int MS3 = 9;  // Example: connected to Arduino pin 9

// Define Stepper Motor Connections
const int stepPinX = 3; // Step pin for X-axis
const int dirPinX = 4;  // Direction pin for X-axis

const int stepPinY = 5; // Step pin for Y-axis
const int dirPinY = 6;  // Direction pin for Y-axis

// Define Steps per Revolution based on Microstepping
const long stepsPerRev = 3200;  // Adjust for your microstepping mode

// Define Delay Between Steps (in Microseconds)
const int stepDelay = 1000;  // Adjust this value to control motor speed (1000 Âµs = 1 ms per step)

void setup() {
  // Initialize Step and Direction Pins as Outputs
  pinMode(stepPinX, OUTPUT);
  pinMode(dirPinX, OUTPUT);
  pinMode(stepPinY, OUTPUT);
  pinMode(dirPinY, OUTPUT);

  // Initialize MS1, MS2, MS3 pins as Outputs
  pinMode(MS1, OUTPUT);
  pinMode(MS2, OUTPUT);
  pinMode(MS3, OUTPUT);

  // Set Microstepping Mode (Example: 1/16 Microstepping)
  digitalWrite(MS1, HIGH); // Set MS1 to HIGH
  digitalWrite(MS2, HIGH); // Set MS2 to HIGH
  digitalWrite(MS3, HIGH); // Set MS3 to HIGH

  // Set direction for both motors (HIGH = one direction, LOW = reverse)
  digitalWrite(dirPinX, HIGH);
  digitalWrite(dirPinY, HIGH);

  // Initialize Serial Communication for Debugging
  Serial.begin(9600);
  Serial.println("Microstepping mode set to 1/16 step.");
}

void loop() {
  // Rotate Both Motors One Full Revolution
  for (long i = 0; i < stepsPerRev; i++) {
    // Pulse Step Pins HIGH
    digitalWrite(stepPinX, HIGH);
    digitalWrite(stepPinY, HIGH);
    delayMicroseconds(stepDelay);
    
    // Pulse Step Pins LOW
    digitalWrite(stepPinX, LOW);
    digitalWrite(stepPinY, LOW);
    delayMicroseconds(stepDelay);
  }

  Serial.println("Completed one full revolution on both X and Y axes.");

  // Optional: Stop the Arduino after rotation
  while (1) {
    ; // Infinite loop to halt further actions
  }
}
